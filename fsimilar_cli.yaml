# program name, name for the executable
ProgramName: fsimilar

PackageName: main

Name: fsimilar
Desc: "find/file similar"
Text: Find similar files
Global: true
NumOption: cli.AtLeast(1)
#NumArg: cli.ExactN(1)

#UsageLead: "Usage:\\n  fsimilar [Options]\\n\\nExample:\\n  find . \\\\( -type f -o -type l \\\\) -printf '%%7s %%p\\\\n' | fsimilar -i -S\\n  mlocate -i soccer | fsimilar -i | fsimilar -i -Q"

Options:
  - Name: SizeGiven
    Type: bool
    Flag: S,size-given
    Usage: size of the files in input as first field

  - Name: QuerySize 
    Type: bool
    Flag: Q,query-size
    Usage: query the file sizes from os

  - Name: Filei
    Type: '*clix.Reader'
    Flag: '*i,input'
    Usage: input from stdin or the given file (mandatory)

  - Name: Phonetic
    Type: bool
    Flag: p,phonetic
    Usage: use phonetic as words for further error tolerant

  - Name: Final
    Type: bool
    Flag: F,final
    Usage: produce final output, the recommendations

  - Name: CfgPath
    Type: string
    Flag: c,cp
    Usage: config path, path that hold all template files
    Value: '$FSIM_CP'

  - Name: Verbose
    Type: cli.Counter
    Flag: v,verbose
    Usage: verbose mode (multiple -v increase the verbosity)

Command:

  - Name: sim
    Desc: "Filter the input using simhash similarity check"
    Text: 'Usage:\n  mlocate -i soccer | fsimilar sim -i'
    #NumArg: cli.AtLeast(1)
    NumOption: cli.AtLeast(1)

    Options:
      - Name: Distance
        Type: uint8
        Flag: d,dist
        Usage: the hamming distance of hashes within which to deem similar
        Value: 3


  - Name: vec
    Desc: "Use Vector Space for similarity check"
    Text: 'Usage:\n  { mlocate -i soccer; mlocate -i football; } | fsimilar sim -i | fsimilar vec -i -S -Q -F'
    #NumArg: cli.AtLeast(1)
    NumOption: cli.AtLeast(1)

    Options:
      - Name: Threshold
        Type: float64
        Flag: t,thr
        Usage: the threshold above which to deem similar (0.8 = 80%%)
        Value: 0.86
